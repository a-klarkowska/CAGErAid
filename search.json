[{"path":"https://a-klarkowska.github.io/CAGErAid/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 CAGErAid authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://a-klarkowska.github.io/CAGErAid/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Anna Klarkowska. Author, maintainer.","code":""},{"path":"https://a-klarkowska.github.io/CAGErAid/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Klarkowska (2023). CAGErAid: Helper package CAGEr. R package version 0.0.0.9000, https://-klarkowska.github.io/CAGErAid/.","code":"@Manual{,   title = {CAGErAid: Helper package for CAGEr},   author = {Anna Klarkowska},   year = {2023},   note = {R package version 0.0.0.9000},   url = {https://a-klarkowska.github.io/CAGErAid/}, }"},{"path":"https://a-klarkowska.github.io/CAGErAid/index.html","id":"cageraid","dir":"","previous_headings":"","what":"Helper package for CAGEr","title":"Helper package for CAGEr","text":"goal CAGErAid assist using CAGEr analysis CAGE data cross-alignments Barcelona, Osaka Okinawa samples Oikopleura dioica, without splice leader sequences.","code":""},{"path":"https://a-klarkowska.github.io/CAGErAid/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Helper package for CAGEr","text":"can install development version CAGErAid GitHub :","code":"# install.packages(\"devtools\") devtools::install_github('a-klarkowska/CAGErAid') |> suppressPackageStartupMessages() #> Downloading GitHub repo a-klarkowska/CAGErAid@HEAD #> CAGEr (0c79a3a59... -> 18d72958c...) [GitHub] #> Skipping 4 packages not available: SummarizedExperiment, S4Vectors, rtracklayer, BiocGenerics #> Downloading GitHub repo charles-plessy/CAGEr@HEAD #> zlibbioc     (1.46.0    -> 1.48.0   ) [CRAN] #> XVector      (0.40.0    -> 0.42.0   ) [CRAN] #> SparseArray  (NA        -> 1.2.0    ) [CRAN] #> S4Arrays     (1.0.6     -> 1.2.0    ) [CRAN] #> IRanges      (2.34.1    -> 2.36.0   ) [CRAN] #> S4Vectors    (0.38.2    -> 0.40.1   ) [CRAN] #> MatrixGen... (1.12.3    -> 1.14.0   ) [CRAN] #> BiocGenerics (0.46.0    -> 0.48.1   ) [CRAN] #> GenomeInf... (1.2.10    -> 1.2.11   ) [CRAN] #> RCurl        (1.98-1.12 -> 1.98-1.13) [CRAN] #> GenomeInfoDb (1.36.4    -> 1.38.0   ) [CRAN] #> XML          (3.99-0.14 -> 3.99-0.15) [CRAN] #> DelayedArray (0.26.7    -> 0.28.0   ) [CRAN] #> Biobase      (2.60.0    -> 2.62.0   ) [CRAN] #> Rhtslib      (2.2.0     -> 2.4.0    ) [CRAN] #> BiocParallel (1.34.2    -> 1.36.0   ) [CRAN] #> Rsamtools    (2.16.0    -> 2.18.0   ) [CRAN] #> Biostrings   (2.68.1    -> 2.70.1   ) [CRAN] #> Summarize... (1.30.2    -> 1.32.0   ) [CRAN] #> GenomicRa... (1.52.1    -> 1.54.1   ) [CRAN] #> rlang        (1.1.1     -> 1.1.2    ) [CRAN] #> xfun         (0.40      -> 0.41     ) [CRAN] #> evaluate     (0.22      -> 0.23     ) [CRAN] #> RcppEigen    (0.3.3.9.3 -> 0.3.3.9.4) [CRAN] #> knitr        (1.44      -> 1.45     ) [CRAN] #> htmltools    (0.5.6.1   -> 0.5.7    ) [CRAN] #> htmlTable    (2.4.1     -> 2.4.2    ) [CRAN] #> ProtGenerics (1.32.0    -> 1.34.0   ) [CRAN] #> Annotatio... (1.24.0    -> 1.26.0   ) [CRAN] #> VariantAn... (1.46.0    -> 1.48.0   ) [CRAN] #> BiocFileC... (2.8.0     -> 2.10.1   ) [CRAN] #> KEGGREST     (1.40.1    -> 1.42.0   ) [CRAN] #> RSQLite      (2.3.1     -> 2.3.3    ) [CRAN] #> BiocIO       (1.10.0    -> 1.12.0   ) [CRAN] #> GenomicAl... (1.36.0    -> 1.38.0   ) [CRAN] #> biovizBase   (1.48.0    -> 1.50.0   ) [CRAN] #> BSgenome     (1.68.0    -> 1.70.1   ) [CRAN] #> ensembldb    (2.24.1    -> 2.26.0   ) [CRAN] #> GenomicFe... (1.52.2    -> 1.54.1   ) [CRAN] #> Annotatio... (1.62.2    -> 1.64.1   ) [CRAN] #> biomaRt      (2.56.1    -> 2.58.0   ) [CRAN] #> withr        (2.5.1     -> 2.5.2    ) [CRAN] #> Gviz         (1.44.2    -> 1.46.0   ) [CRAN] #> rtracklayer  (1.60.1    -> 1.62.0   ) [CRAN] #> Interacti... (1.28.1    -> 1.30.0   ) [CRAN] #> sparseMat... (1.12.2    -> 1.14.0   ) [CRAN] #> GenomicIn... (1.34.0    -> 1.36.0   ) [CRAN] #> GenomicFiles (1.36.0    -> 1.38.0   ) [CRAN] #> BiocBaseU... (1.2.0     -> 1.4.0    ) [CRAN] #> DelayedMa... (1.22.6    -> 1.24.0   ) [CRAN] #> CAGEfightR   (1.20.0    -> 1.22.0   ) [CRAN] #> MultiAssa... (1.26.0    -> 1.28.0   ) [CRAN] #> Installing 52 packages: zlibbioc, XVector, SparseArray, S4Arrays, IRanges, S4Vectors, MatrixGenerics, BiocGenerics, GenomeInfoDbData, RCurl, GenomeInfoDb, XML, DelayedArray, Biobase, Rhtslib, BiocParallel, Rsamtools, Biostrings, SummarizedExperiment, GenomicRanges, rlang, xfun, evaluate, RcppEigen, knitr, htmltools, htmlTable, ProtGenerics, AnnotationFilter, VariantAnnotation, BiocFileCache, KEGGREST, RSQLite, BiocIO, GenomicAlignments, biovizBase, BSgenome, ensembldb, GenomicFeatures, AnnotationDbi, biomaRt, withr, Gviz, rtracklayer, InteractionSet, sparseMatrixStats, GenomicInteractions, GenomicFiles, BiocBaseUtils, DelayedMatrixStats, CAGEfightR, MultiAssayExperiment #> Installing packages into '/tmp/Rtmp0sA0qG/temp_libpath36f1c49b9f5d4' #> (as 'lib' is unspecified) #> ── R CMD build ───────────────────────────────────────────────────────────────── #> * checking for file ‘/tmp/RtmpTegZqm/remotes3792a5646176ce/charles-plessy-CAGEr-18d7295/DESCRIPTION’ ... OK #> * preparing ‘CAGEr’: #> * checking DESCRIPTION meta-information ... OK #> * checking for LF line-endings in source and make files and shell scripts #> * checking for empty or unneeded directories #> * building ‘CAGEr_2.9.0.tar.gz’ #> Installing package into '/tmp/Rtmp0sA0qG/temp_libpath36f1c49b9f5d4' #> (as 'lib' is unspecified) #> ── R CMD build ───────────────────────────────────────────────────────────────── #> * checking for file ‘/tmp/RtmpTegZqm/remotes3792a57e9163a3/a-klarkowska-CAGErAid-afdddd4/DESCRIPTION’ ... OK #> * preparing ‘CAGErAid’: #> * checking DESCRIPTION meta-information ... OK #> * checking for LF line-endings in source and make files and shell scripts #> * checking for empty or unneeded directories #> Removed empty directory ‘CAGErAid/vignettes’ #> * looking to see if a ‘data/datalist’ file should be added #>   NB: this package now depends on R (>= 3.5.0) #>   WARNING: Added dependency on R >= 3.5.0 because serialized objects in #>   serialize/load version 3 cannot be read in older versions of R. #>   File(s) containing such objects: #>     ‘CAGErAid/data/ce_clean.rds’ ‘CAGErAid/inst/extdata/ce_clean.rds’ #> * building ‘CAGErAid_0.0.0.9000.tar.gz’ #> Installing package into '/tmp/Rtmp0sA0qG/temp_libpath36f1c49b9f5d4' #> (as 'lib' is unspecified)"},{"path":"https://a-klarkowska.github.io/CAGErAid/index.html","id":"polishing-data","dir":"","previous_headings":"","what":"Polishing data","title":"Helper package for CAGEr","text":"cross-aligning CAGE reads Barcelona, Osaka Okinawa genomes, can use getCTSS() CAGEexp object. details load data, see vignette. CAGEexp file use polishing sample names little information samples . , can use quickPolish(). add metadata nf-core RNAseq pipeline QC, call quickMQC(). easily annotate data, can use quickGFF().","code":"library(CAGErAid) |> suppressPackageStartupMessages()  # load CAGEexp object - Barcelona reads aligned to Barcelona genome ce_path <- system.file(\"extdata\", \"ce_clean.rds\", package=\"CAGErAid\") ce <- readRDS(ce_path) ce <- ce |>    quickPolish(reads = 'bar') |>    quickMQC(guess_path = TRUE) gff_path <- system.file('extdata', 'Barcelona.gtf', package = 'CAGErAid') gff <- quickGFF(gff_path, types = c('transcript', 'exon')) ce <- CAGEr::annotateCTSS(ce, gff)"},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/makeBed.html","id":null,"dir":"Reference","previous_headings":"","what":"Exports clusters from CAGEexp object — makeBed","title":"Exports clusters from CAGEexp object — makeBed","text":"Exports clusters CAGEexp objects containing splice leader splice leader removed data black white bed tracks. clusters, call quickClustersSL quickClustersNO.","code":""},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/makeBed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exports clusters from CAGEexp object — makeBed","text":"","code":"makeBed(ce, sl_found)"},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/makeBed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exports clusters from CAGEexp object — makeBed","text":"ce CAGEexp object sl_found boolean, whether splice leader found data","code":""},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/makeBed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Exports clusters from CAGEexp object — makeBed","text":"tracks bed format","code":""},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/makeBed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Exports clusters from CAGEexp object — makeBed","text":"","code":"if (FALSE) { makeBed(ce, sl_found = TRUE) }"},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/mqcGenstats.html","id":null,"dir":"Reference","previous_headings":"","what":"Imports general QC data (multiqc_general_stats.txt) and writes it into the CAGEexp object\nShould be ran after quickStats and mqcHisat2 — mqcGenstats","title":"Imports general QC data (multiqc_general_stats.txt) and writes it into the CAGEexp object\nShould be ran after quickStats and mqcHisat2 — mqcGenstats","text":"Imports general QC data (multiqc_general_stats.txt) writes CAGEexp object ran quickStats mqcHisat2","code":""},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/mqcGenstats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imports general QC data (multiqc_general_stats.txt) and writes it into the CAGEexp object\nShould be ran after quickStats and mqcHisat2 — mqcGenstats","text":"","code":"mqcGenstats(ce, qc)"},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/mqcGenstats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imports general QC data (multiqc_general_stats.txt) and writes it into the CAGEexp object\nShould be ran after quickStats and mqcHisat2 — mqcGenstats","text":"ce CAGEexp object qc table multiqc_general_stats.txt data","code":""},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/mqcGenstats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imports general QC data (multiqc_general_stats.txt) and writes it into the CAGEexp object\nShould be ran after quickStats and mqcHisat2 — mqcGenstats","text":"CAGEexp object","code":""},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/mqcGenstats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Imports general QC data (multiqc_general_stats.txt) and writes it into the CAGEexp object\nShould be ran after quickStats and mqcHisat2 — mqcGenstats","text":"","code":"if (FALSE) { mqcGenstats(ce, qc) }"},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/mqcHisat2.html","id":null,"dir":"Reference","previous_headings":"","what":"Imports Hisat2 QC data (multiqc_hisat2.txt) and writes it into the CAGEexp object — mqcHisat2","title":"Imports Hisat2 QC data (multiqc_hisat2.txt) and writes it into the CAGEexp object — mqcHisat2","text":"Imports Hisat2 QC data (multiqc_hisat2.txt) writes CAGEexp object","code":""},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/mqcHisat2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imports Hisat2 QC data (multiqc_hisat2.txt) and writes it into the CAGEexp object — mqcHisat2","text":"","code":"mqcHisat2(ce, hisat, check_multimap = FALSE)"},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/mqcHisat2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imports Hisat2 QC data (multiqc_hisat2.txt) and writes it into the CAGEexp object — mqcHisat2","text":"ce CAGEexp object hisat table multiqc_hisat2.txt data check_multimap optional; checks reads removed pipeline","code":""},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/mqcHisat2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imports Hisat2 QC data (multiqc_hisat2.txt) and writes it into the CAGEexp object — mqcHisat2","text":"CAGEexp object","code":""},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/mqcHisat2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Imports Hisat2 QC data (multiqc_hisat2.txt) and writes it into the CAGEexp object — mqcHisat2","text":"","code":"if (FALSE) { mqcHisat2(ce, hisat, check_multimap = TRUE) }"},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/msScope_nfcore_rnaseq.html","id":null,"dir":"Reference","previous_headings":"","what":"Function implementing the scope parameter of the mapStats function — msScope_nfcore_rnaseq","title":"Function implementing the scope parameter of the mapStats function — msScope_nfcore_rnaseq","text":"Credit: Charles Plessy","code":""},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/msScope_nfcore_rnaseq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function implementing the scope parameter of the mapStats function — msScope_nfcore_rnaseq","text":"","code":"msScope_nfcore_rnaseq(libs)"},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/msScope_nfcore_rnaseq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function implementing the scope parameter of the mapStats function — msScope_nfcore_rnaseq","text":"libs data frame containing metadata describing samples sequence libraries","code":""},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/msScope_nfcore_rnaseq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function implementing the scope parameter of the mapStats function — msScope_nfcore_rnaseq","text":"Returns list three elements: libs contains modified version input data frame columns reorganised needed, colums contains names columns use plotting provides order stacked bars plotAnnot function, total indicates total counts used normalising data.","code":""},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/quickCC.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregates tag clusters into consensus clusters — quickCC","title":"Aggregates tag clusters into consensus clusters — quickCC","text":"Quickly aggregates CTSSs consensus clusters data samples without splice leader detected established parameters. finding tag clusters, use quickTC(). method clustering CTSSs samples without SL detected distclu, - paraclu. default, algorithm uses 4 cores. function annotates found consensus clusters use GFF file. easy processing gff files use quickGFF().","code":""},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/quickCC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregates tag clusters into consensus clusters — quickCC","text":"","code":"quickCC(ce, sl_found, gff)"},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/quickCC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregates tag clusters into consensus clusters — quickCC","text":"ce CAGEexp object sl_found boolean, whether data contains samples without SL sequences gff GFF file","code":""},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/quickCC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregates tag clusters into consensus clusters — quickCC","text":"CAGEexp object","code":""},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/quickCC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregates tag clusters into consensus clusters — quickCC","text":"","code":"if (FALSE) { quickCC(ce, sl_found = TRUE, gff) }"},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/quickClustersNO.html","id":null,"dir":"Reference","previous_headings":"","what":"Clusters CTSSs for samples without splice leader — quickClustersNO","title":"Clusters CTSSs for samples without splice leader — quickClustersNO","text":"Quickly clusters CTSSs data samples without splice leader detected established parameters. clustering CTSSs samples splice leader found, use quickClustersSL(). method clustering CTSSs distclu, default algorithm uses 4 cores. Optional aggregating tags possible aggregate = TRUE, user needs provide GFF file. easy processing gff files use quickGFF().","code":""},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/quickClustersNO.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clusters CTSSs for samples without splice leader — quickClustersNO","text":"","code":"quickClustersNO(ce, aggregate = FALSE, gff = NULL)"},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/quickClustersNO.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clusters CTSSs for samples without splice leader — quickClustersNO","text":"ce CAGEexp object aggregate whether return consensus clusters gff GFF file","code":""},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/quickClustersNO.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clusters CTSSs for samples without splice leader — quickClustersNO","text":"CAGEexp object","code":""},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/quickClustersNO.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clusters CTSSs for samples without splice leader — quickClustersNO","text":"","code":"if (FALSE) { quickClustersNO(ce, aggregate = TRUE, gff) }"},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/quickClustersSL.html","id":null,"dir":"Reference","previous_headings":"","what":"Clusters CTSSs for samples with splice leader — quickClustersSL","title":"Clusters CTSSs for samples with splice leader — quickClustersSL","text":"Quickly clusters CTSSs splice leader-containing sample data established parameters. clustering CTSSs samples without splice leader found, use quickClustersNO(). method clustering CTSSs paraclu, default algorithm uses 4 cores. Optional aggregating tags possible aggregate = TRUE, user needs provide GFF file. easy processing gff files use quickGFF().","code":""},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/quickClustersSL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clusters CTSSs for samples with splice leader — quickClustersSL","text":"","code":"quickClustersSL(ce, aggregate = FALSE, gff = NULL)"},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/quickClustersSL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clusters CTSSs for samples with splice leader — quickClustersSL","text":"ce CAGEexp object aggregate whether return consensus clusters gff GFF file","code":""},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/quickClustersSL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clusters CTSSs for samples with splice leader — quickClustersSL","text":"CAGEexp object","code":""},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/quickClustersSL.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clusters CTSSs for samples with splice leader — quickClustersSL","text":"","code":"if (FALSE) { quickClustersSL(ce, aggregate = TRUE, gff) }"},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/quickGFF.html","id":null,"dir":"Reference","previous_headings":"","what":"Import a GFF easily — quickGFF","title":"Import a GFF easily — quickGFF","text":"Quickly imports processes GFF object character vector use annotating CAGEexp objects","code":""},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/quickGFF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import a GFF easily — quickGFF","text":"","code":"quickGFF(gff_path, types = c(\"transcript\", \"intron\", \"exon\"))"},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/quickGFF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import a GFF easily — quickGFF","text":"gff_path path GFF file types types features interest","code":""},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/quickGFF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import a GFF easily — quickGFF","text":"GRanges object selected features","code":""},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/quickGFF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import a GFF easily — quickGFF","text":"","code":"if (FALSE) { quickGFF('barcelona.gff', types = c('intron', 'exon')) }"},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/quickMQC.html","id":null,"dir":"Reference","previous_headings":"","what":"Imports QC data — quickMQC","title":"Imports QC data — quickMQC","text":"Imports Hisat2 QC (multiqc_hisat2.txt) general QC data (multiqc_general_stats.txt) writes CAGEexp object","code":""},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/quickMQC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imports QC data — quickMQC","text":"","code":"quickMQC(ce, guess_path = TRUE, hisat = NULL, qc = NULL)"},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/quickMQC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imports QC data — quickMQC","text":"ce CAGEexp object guess_path boolean, TRUE, checks multiqc_hisat2.txt multiqc_general_stats.txt paths can inferred input files CAGEexp object hisat table multiqc_hisat2.txt data qc table multiqc_general_stats.txt data","code":""},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/quickMQC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imports QC data — quickMQC","text":"CAGEexp object","code":""},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/quickMQC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Imports QC data — quickMQC","text":"","code":"if (FALSE) { quickMQC(ce, guess_path = FALSE, hisat, qc) }"},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/quickPolish.html","id":null,"dir":"Reference","previous_headings":"","what":"Polish CAGEexp data — quickPolish","title":"Polish CAGEexp data — quickPolish","text":"Fixes sample names adds metadata. Use quickMQC().","code":""},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/quickPolish.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Polish CAGEexp data — quickPolish","text":"","code":"quickPolish(ce)"},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/quickPolish.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Polish CAGEexp data — quickPolish","text":"ce CAGEexp object","code":""},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/quickPolish.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Polish CAGEexp data — quickPolish","text":"CAGEexp object","code":""},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/quickPolish.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Polish CAGEexp data — quickPolish","text":"","code":"if (FALSE) { quickPolish(ce) }"},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/quickTC.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates tag clusters with set parameters — quickTC","title":"Calculates tag clusters with set parameters — quickTC","text":"Quickly calculates tag clusters CTSSs data samples without splice leader detected established parameters. finding consensus clusters, use quickCC(). method clustering CTSSs samples without SL detected distclu, - paraclu. default, algorithm uses 4 cores.","code":""},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/quickTC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates tag clusters with set parameters — quickTC","text":"","code":"quickTC(ce, sl_found)"},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/quickTC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates tag clusters with set parameters — quickTC","text":"ce CAGEexp object sl_found boolean, whether data contains samples without SL sequences","code":""},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/quickTC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates tag clusters with set parameters — quickTC","text":"CAGEexp object","code":""},{"path":"https://a-klarkowska.github.io/CAGErAid/reference/quickTC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates tag clusters with set parameters — quickTC","text":"","code":"if (FALSE) { quickTC(ce, sl_found = TRUE) }"}]
