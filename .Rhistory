library(devtools)
use_r()
use_r('hisat2')
# export to bed format
trks <- exportToTrack(ce, oneTrack = FALSE)
length(ce)
ce[1]
ce <-
CAGEexp(
metadata = list(genomeName = BSgenomeToUse),
colData  = DataFrame(
inputFiles     = pathsToInputFiles[1:3],
sampleLabels   = sampleLabels[1:3],
inputFilesType = 'bamPairedEnd',
row.names      = sampleLabels[1:3]
)
)
ce <- getCTSS(ce, useMulticore = TRUE, nrCores = 3, correctSystematicG=FALSE, removeFirstG=FALSE)
ce <-
CAGEexp(
metadata = list(genomeName = BSgenomeToUse),
colData  = DataFrame(
inputFiles     = pathsToInputFiles[1],
sampleLabels   = sampleLabels[1],
inputFilesType = 'bamPairedEnd',
row.names      = sampleLabels[1]
)
)
ce <- getCTSS(ce, useMulticore = TRUE, nrCores = 3, correctSystematicG=FALSE, removeFirstG=FALSE)
# export to bed format
trks <- exportToTrack(ce, oneTrack = FALSE)
# export to bed format
ce |> CTSSnormalizedTpmGR("all") |> exportToTrack(ce, oneTrack = FALSE)
msScope_nfcore_rnaseq <- function(libs) {
CAGEr:::.checkLibsDataFrame(libs, c("extracted", "rdna",
"paired_total", "paired_aligned_multi", "paired_aligned_one",
"realLibrarySizes"))
libs$rDNA           <- libs$rdna
libs$Unmapped       <- libs$paired_total - libs$paired_aligned_one - libs$paired_aligned_multi
libs$Multimapped    <- libs$paired_aligned_multi
libs$UniquelyMapped <- libs$paired_aligned_one
libs$Discarded      <- libs$realLibrarySizes - libs$extracted
list(libs = libs, columns = c('Discarded','rDNA', 'Unmapped', 'Multimapped', 'UniquelyMapped'), total = libs$realLibrarySizes)
}
plotAnnot(ce, msScope_nfcore_rnaseq, group = 'RNA', facet = 'SLfactor', norm = FALSE) +
ylab('Number of tags processed') + xlab('Sample name') +
ggtitle('QC report of CAGE library alignment',
sub = 'The splice leader sequence was detected and removed before alignment.')
library(ggplot2)
plotAnnot(ce, msScope_nfcore_rnaseq, group = 'RNA', facet = 'SLfactor', norm = FALSE) +
ylab('Number of tags processed') + xlab('Sample name') +
ggtitle('QC report of CAGE library alignment',
sub = 'The splice leader sequence was detected and removed before alignment.')
CAGEr:::.checkLibsDataFrame
colData(ce)
ce <-
CAGEexp(
metadata = list(genomeName = BSgenomeToUse),
colData  = DataFrame(
inputFiles     = pathsToInputFiles[1:4],
sampleLabels   = sampleLabels[1:4],
inputFilesType = 'bamPairedEnd',
row.names      = sampleLabels[1:4]
)
)
ce <- getCTSS(ce, useMulticore = TRUE, nrCores = 3, correctSystematicG=FALSE, removeFirstG=FALSE)
librarySizes(ce)
colData(ce)
ce$SLfound  <- grepl('SL', sampleLabels(ce))
ce$SLfactor <- ce$SLfound |> factor(labels = c('SL not found', 'SL found'))
ce$sampleType <- 'Adult'
ce$sampleType[grepl('Rep', sampleLabels(ce))] <- 'Embry'
colData()
colData(ce)
# remove X from sample name and remove 'names' attribute
ce$RNA <- sampleLabels(ce) |> sub(pat = '_SL.*|_no.*', rep = '') |> sub(pat = '^X', rep = '') |> unname()
ce$Description <-
paste0('Oikopleura dioica (Barcelona) CAGE library prepared by DNAFORM in 2022—23 from the RNA sample “',
ce$RNA, '”. ',
ifelse(ce$SLfound, 'A splice leader sequence was found and removed. ',
'No splice leader sequence was found. '),
'The reads where then aligned with HISAT2 using the nf-core RNA-seq pipeline version 3.4.')
# check
colData(ce)
hs <- read.table(head = TRUE, '/bucket/LuscombeU/live/CharlesPlessy/CAGE/2022-11-09_Barcelona_Oik/AlignWithRNAseqPipelinePE_BAR/multiqc/hisat2/multiqc_data/multiqc_hisat2.txt')
rownames(hs) <- make.names(hs$Sample)
hs <- hs[sampleLabels(ce),]
# Apparently, multimapped reads have been removed by the pipeline.
all(librarySizes(ce) == hs$paired_aligned_one)
ce$paired_aligned_one   <- hs$paired_aligned_one
ce$paired_aligned_multi <- hs$paired_aligned_multi
ce$paired_total         <- hs$paired_total
colData(ce)
qc <- read.table(head = TRUE, sep = '\t', '/bucket/LuscombeU/live/CharlesPlessy/CAGE/2022-11-09_Barcelona_Oik/AlignWithRNAseqPipelinePE_BAR/multiqc/hisat2/multiqc_data/multiqc_general_stats.txt')
rownames(qc) <- make.names(qc$Sample)
qc2 <- qc[paste0(sampleLabels(ce), '_2'),]
# raw fastqc
ce$realLibrarySizes <- qc2$FastQC..raw._mqc.generalstats.fastqc_raw.total_sequences
# trimmed fastqc
ce$extracted    <- qc2$FastQC..trimmed._mqc.generalstats.fastqc_trimmed.total_sequences
# approximation on rRNA counts
ce$rdna <- ce$extracted - ce$paired_total
View(hs)
sampleLabels(c)
sampleLabels(ce)
?sampleLabels
?make.names
?read.table
set_path <- function(prefix, suffix) {
path <- paste(prefix, suffix, sep = '')
path
}
gen_path <-
'/bucket/LuscombeU/live/CharlesPlessy/CAGE/2022-11-09_Barcelona_Oik/AlignWithRNAseqPipelinePE_BAR/', 'multiqc')
'/bucket/LuscombeU/live/CharlesPlessy/CAGE/2022-11-09_Barcelona_Oik/AlignWithRNAseqPipelinePE_BAR/')
'/bucket/LuscombeU/live/CharlesPlessy/CAGE/2022-11-09_Barcelona_Oik/AlignWithRNAseqPipelinePE_BAR/'
gen_path
gen_path <- '/bucket/LuscombeU/live/CharlesPlessy/CAGE/2022-11-09_Barcelona_Oik/AlignWithRNAseqPipelinePE_BAR/'
set_path(gen_path, 'multiqc')
?paste
# Apparently, multimapped reads have been removed by the pipeline.
all(librarySizes(ce) == hs$paired_aligned_one)
mqc_hisat2 <- function(ce_obj, hs_path, check_multimap = FALSE) {
hs.df <- utils::read.table(head = TRUE, hs_path)
rownames(hs.df) <- make.names(hs.df$Sample)
hs.df <- hs.df[CAGEr::sampleLabels(ce_obj)]
if (check_multimap == TRUE){
all(librarySizes(ce_obj) == hs.df$paired_aligned_one)
}
ce_obj$paired_aligned_one   <- hs.df$paired_aligned_one
ce_obj$paired_aligned_multi <- hs.df$paired_aligned_multi
ce_obj$paired_total         <- hs.df$paired_total
ce_obj
}
mqc(ce, set_path(gen_path, 'multiqc/hisat2/multiqc_data/multiqc_hisat2.txt'))
mqc_hisat2(ce, set_path(gen_path, 'multiqc/hisat2/multiqc_data/multiqc_hisat2.txt'))
CAGEr::sampleLabels(ce)
hs[CAGEr::sampleLabels(ce)]
hs <- read.table(head = TRUE, '/bucket/LuscombeU/live/CharlesPlessy/CAGE/2022-11-09_Barcelona_Oik/AlignWithRNAseqPipelinePE_BAR/multiqc/hisat2/multiqc_data/multiqc_hisat2.txt')
rownames(hs) <- make.names(hs$Sample)
hs <- hs[sampleLabels(ce),]
# Apparently, multimapped reads have been removed by the pipeline.
all(librarySizes(ce) == hs$paired_aligned_one)
ce$paired_aligned_one   <- hs$paired_aligned_one
ce$paired_aligned_multi <- hs$paired_aligned_multi
ce$paired_total         <- hs$paired_total
hs <- read.table(head = TRUE, '/bucket/LuscombeU/live/CharlesPlessy/CAGE/2022-11-09_Barcelona_Oik/AlignWithRNAseqPipelinePE_BAR/multiqc/hisat2/multiqc_data/multiqc_hisat2.txt')
rownames(hs) <- make.names(hs$Sample)
mqc_hisat2 <- function(ce_obj, hs_path, check_multimap = FALSE) {
hs.df <- utils::read.table(head = TRUE, hs_path)
rownames(hs.df) <- make.names(hs.df$Sample)
hs.df <- hs.df[CAGEr::sampleLabels(ce_obj),]
if (check_multimap == TRUE){
all(librarySizes(ce_obj) == hs.df$paired_aligned_one)
}
ce_obj$paired_aligned_one   <- hs.df$paired_aligned_one
ce_obj$paired_aligned_multi <- hs.df$paired_aligned_multi
ce_obj$paired_total         <- hs.df$paired_total
ce_obj
}
mqc_hisat2(ce, set_path(gen_path, 'multiqc/hisat2/multiqc_data/multiqc_hisat2.txt'))
colData(mqc_hisat2(ce, set_path(gen_path, 'multiqc/hisat2/multiqc_data/multiqc_hisat2.txt')))
colData(mqc_hisat2(ce, set_path(gen_path, 'multiqc/hisat2/multiqc_data/multiqc_hisat2.txt'), check_multimap = TRUE))
print(all(librarySizes(ce_obj) == hs.df$paired_aligned_one))
mqc_hisat2 <- function(ce_obj, hs_path, check_multimap = FALSE) {
hs.df <- utils::read.table(head = TRUE, hs_path)
rownames(hs.df) <- make.names(hs.df$Sample)
hs.df <- hs.df[CAGEr::sampleLabels(ce_obj),]
if (check_multimap == TRUE){
print(all(librarySizes(ce_obj) == hs.df$paired_aligned_one))
}
ce_obj$paired_aligned_one   <- hs.df$paired_aligned_one
ce_obj$paired_aligned_multi <- hs.df$paired_aligned_multi
ce_obj$paired_total         <- hs.df$paired_total
ce_obj
}
colData(mqc_hisat2(ce, set_path(gen_path, 'multiqc/hisat2/multiqc_data/multiqc_hisat2.txt'), check_multimap = TRUE))
mqc_hisat2(ce, set_path(gen_path, 'multiqc/hisat2/multiqc_data/multiqc_hisat2.txt'), check_multimap = TRUE)
c1 <- mqc_hisat2(ce, set_path(gen_path, 'multiqc/hisat2/multiqc_data/multiqc_hisat2.txt'), check_multimap = TRUE)
View(c1)
mqc_hisat2 <- function(ce_obj, hs_path, check_multimap = FALSE) {
hs.df <- utils::read.table(head = TRUE, hs_path)
rownames(hs.df) <- make.names(hs.df$Sample)
hs.df <- hs.df[CAGEr::sampleLabels(ce_obj),]
if (check_multimap == TRUE){
if (all(librarySizes(ce_obj) == hs.df$paired_aligned_one)) {
print('Multimapped reads have been removed by the pipeline')
}
else print('Multimapped reads have not been removed by the pipeline')
}
ce_obj$paired_aligned_one   <- hs.df$paired_aligned_one
ce_obj$paired_aligned_multi <- hs.df$paired_aligned_multi
ce_obj$paired_total         <- hs.df$paired_total
ce_obj
}
c1 <- mqc_hisat2(ce, set_path(gen_path, 'multiqc/hisat2/multiqc_data/multiqc_hisat2.txt'), check_multimap = TRUE)
rm(c1)
?paste
mqc_genstats <- function(ce_obj, qc_path){
qc.df <- utils::read.table(header = TRUE, sep = '\t', qc_path)
rownames(qc.df) <- make.names(qc.df$Sample)
qc2.df <- qc.df[paste(CAGEr::sampleLabels(ce_obj), '_2'),]
ce_obj$realLibrarySizes <- qc2.df$FastQC..raw._mqc.generalstats.fastqc_raw.total_sequences
ce.obj$extracted  <- qc2.df$FastQC..trimmed._mqc.generalstats.fastqc_trimmed.total_sequences
ce.obj$rdna <- ce.obj$extracted - ce.obj$paired_total
ce_obj
}
c1 <- mqc_genstats(ce, set_path(gen_path, 'multiqc/hisat2/multiqc_data/multiqc_general_stats.txt''))
)
''
c1 <- mqc_genstats(ce, set_path(gen_path, 'multiqc/hisat2/multiqc_data/multiqc_general_stats.txt'))
c1 <- mqc_genstats(ce_obj = ce, set_path(gen_path, 'multiqc/hisat2/multiqc_data/multiqc_general_stats.txt'))
mqc_genstats <- function(ce_obj, qc_path){
qc.df <- utils::read.table(header = TRUE, sep = '\t', qc_path)
rownames(qc.df) <- make.names(qc.df$Sample)
qc2.df <- qc.df[paste(CAGEr::sampleLabels(ce_obj), '_2'),]
ce_obj$realLibrarySizes <- qc2.df$FastQC..raw._mqc.generalstats.fastqc_raw.total_sequences
ce_obj$extracted  <- qc2.df$FastQC..trimmed._mqc.generalstats.fastqc_trimmed.total_sequences
ce_obj$rdna <- ce_obj$extracted - ce_obj$paired_total
ce_obj
}
c1 <- mqc_genstats(ce_obj = ce, set_path(gen_path, 'multiqc/hisat2/multiqc_data/multiqc_general_stats.txt'))
colData(c1)
mqc_genstats <- function(ce_obj, qc_path){
qc.df <- utils::read.table(header = TRUE, sep = '\t', qc_path)
rownames(qc.df) <- make.names(qc.df$Sample)
qc2.df <- qc.df[paste(CAGEr::sampleLabels(ce_obj), '_2'),]
ce_obj$realLibrarySizes <- qc2.df$FastQC..raw._mqc.generalstats.fastqc_raw.total_sequences
ce_obj$extracted  <- qc2.df$FastQC..trimmed._mqc.generalstats.fastqc_trimmed.total_sequences
ce_obj$rdna <- ce_obj$extracted - ce_obj$paired_total
ce_obj
}
c1 <- mqc_genstats(ce_obj = ce, set_path(gen_path, 'multiqc/hisat2/multiqc_data/multiqc_general_stats.txt'))
colData(c1)
mqc_genstats <- function(ce_obj, qc_path){
qc.df <- utils::read.table(header = TRUE, sep = '\t', qc_path)
rownames(qc.df) <- make.names(qc.df$Sample)
qc2.df <- qc.df[paste0(CAGEr::sampleLabels(ce_obj), '_2'),]
ce_obj$realLibrarySizes <- qc2.df$FastQC..raw._mqc.generalstats.fastqc_raw.total_sequences
ce_obj$extracted  <- qc2.df$FastQC..trimmed._mqc.generalstats.fastqc_trimmed.total_sequences
ce_obj$rdna <- ce_obj$extracted - ce_obj$paired_total
ce_obj
}
c1 <- mqc_genstats(ce_obj = ce, set_path(gen_path, 'multiqc/hisat2/multiqc_data/multiqc_general_stats.txt'))
colData(c1)
qc2.df <- qc.df[backports::paste0(CAGEr::sampleLabels(ce_obj), '_2'),]
mqc_genstats <- function(ce_obj, qc_path){
qc.df <- utils::read.table(header = TRUE, sep = '\t', qc_path)
rownames(qc.df) <- make.names(qc.df$Sample)
qc2.df <- qc.df[backports::paste0(CAGEr::sampleLabels(ce_obj), '_2'),]
ce_obj$realLibrarySizes <- qc2.df$FastQC..raw._mqc.generalstats.fastqc_raw.total_sequences
ce_obj$extracted  <- qc2.df$FastQC..trimmed._mqc.generalstats.fastqc_trimmed.total_sequences
ce_obj$rdna <- ce_obj$extracted - ce_obj$paired_total
ce_obj
}
rm(c1)
c1 <- mqc_genstats(ce_obj = ce, set_path(gen_path, 'multiqc/hisat2/multiqc_data/multiqc_general_stats.txt'))
mqc_genstats <- function(ce_obj, qc_path){
qc.df <- utils::read.table(header = TRUE, sep = '\t', qc_path)
rownames(qc.df) <- make.names(qc.df$Sample)
qc2.df <- qc.df[paste0(CAGEr::sampleLabels(ce_obj), '_2'),]
ce_obj$realLibrarySizes <- qc2.df$FastQC..raw._mqc.generalstats.fastqc_raw.total_sequences
ce_obj$extracted  <- qc2.df$FastQC..trimmed._mqc.generalstats.fastqc_trimmed.total_sequences
ce_obj$rdna <- ce_obj$extracted - ce_obj$paired_total
ce_obj
}
c1 <- mqc_genstats(ce_obj = ce, set_path(gen_path, 'multiqc/hisat2/multiqc_data/multiqc_general_stats.txt'))
colData(c1)
set_path <- function(prefix, suffix) {
path <- paste0(prefix, suffix)
path
}
set_path(gen_path, 'multiqc')
?plotAnnot
library('ggplot2'), theme_set(theme_bw())
library('ggplot2'); theme_set(theme_bw())
# pipeline QC
# lots of redundant data regarding multimapping, mapping once etc
# recalculates proportions relative to library sizes to make it less redundant
msScope_nfcore_rnaseq <- function(libs) {
CAGEr:::.checkLibsDataFrame(libs, c("extracted", "rdna",
"paired_total", "paired_aligned_multi", "paired_aligned_one",
"realLibrarySizes"))
libs$rDNA           <- libs$rdna
libs$Unmapped       <- libs$paired_total - libs$paired_aligned_one - libs$paired_aligned_multi
libs$Multimapped    <- libs$paired_aligned_multi
libs$UniquelyMapped <- libs$paired_aligned_one
libs$Discarded      <- libs$realLibrarySizes - libs$extracted
list(libs = libs, columns = c('Discarded','rDNA', 'Unmapped', 'Multimapped', 'UniquelyMapped'), total = libs$realLibrarySizes)
}
plotAnnot(ce, msScope_nfcore_rnaseq, group = 'RNA', facet = 'SLfactor', norm = FALSE) +
ylab('Number of tags processed') + xlab('Sample name') +
ggtitle('QC report of CAGE library alignment',
sub = 'The splice leader sequence was detected and removed before alignment.')
plot_mapping <- function(ce_obj){
CAGEr::plotAnnot(ce_obj, msScope_nfcore_rnaseq, group = 'RNA', facet = 'SLfactor', norm = FALSE) +
ylab('Number of tags processed') +
xlab('Sample name') +
ggtitle('QC report of CAGE library alignment',
sub = 'The splice leader sequence was detected and removed before alignment')
}
plot_mapping(ce)
CAGEr::plotAnnot(ce_obj, msScope_nfcore_rnaseq, group = 'RNA', facet = 'SLfactor', norm = FALSE) +
ylab('Number of tags processed') +
xlab('Sample name') +
scale_x_discrete(guide = guide_axis(angle = 45)) +
ggtitle('QC report of CAGE library alignment',
sub = 'The splice leader sequence was detected and removed before alignment')
plot_mapping <- function(ce_obj){
CAGEr::plotAnnot(ce_obj, msScope_nfcore_rnaseq, group = 'RNA', facet = 'SLfactor', norm = FALSE) +
ylab('Number of tags processed') +
xlab('Sample name') +
scale_x_discrete(guide = guide_axis(angle = 45)) +
ggtitle('QC report of CAGE library alignment',
sub = 'The splice leader sequence was detected and removed before alignment')
}
plot_mapping(ce)
plot_mapping <- function(ce_obj){
CAGEr::plotAnnot(ce_obj, msScope_nfcore_rnaseq, group = 'RNA', facet = 'SLfactor', norm = FALSE) +
ylab('Number of tags processed') +
xlab('Sample name') +
scale_y_discrete(guide = guide_axis(angle = 45)) +
ggtitle('QC report of CAGE library alignment',
sub = 'The splice leader sequence was detected and removed before alignment')
}
plot_mapping(ce)
plot_mapping <- function(ce_obj){
CAGEr::plotAnnot(ce_obj, msScope_nfcore_rnaseq, group = 'RNA', facet = 'SLfactor', norm = FALSE) +
ylab('Number of tags processed') +
xlab('Sample name') +
theme(axis.text.x=element_text(angle=45, hjust=1)) +
ggtitle('QC report of CAGE library alignment',
sub = 'The splice leader sequence was detected and removed before alignment')
}
plot_mapping(ce)
CAGEr::plotAnnot(ce_obj, msScope_nfcore_rnaseq, group = 'RNA', facet = 'SLfactor', norm = FALSE) +
ylab('Number of tags processed') +
xlab('Sample name') +
scale_x_continuous(guide = guide_axis(angle = 45)) +
ggtitle('QC report of CAGE library alignment',
sub = 'The splice leader sequence was detected and removed before alignment')
plot_mapping <- function(ce_obj){
CAGEr::plotAnnot(ce_obj, msScope_nfcore_rnaseq, group = 'RNA', facet = 'SLfactor', norm = FALSE) +
ylab('Number of tags processed') +
xlab('Sample name') +
scale_x_continuous(guide = guide_axis(angle = 45)) +
ggtitle('QC report of CAGE library alignment',
sub = 'The splice leader sequence was detected and removed before alignment')
}
plot_mapping(ce)
plot_mapping <- function(ce_obj){
CAGEr::plotAnnot(ce_obj, msScope_nfcore_rnaseq, group = 'RNA', facet = 'SLfactor', norm = FALSE) +
ylab('Number of tags processed') +
xlab('Sample name') +
scale_y_continuous(guide = guide_axis(angle = 45)) +
ggtitle('QC report of CAGE library alignment',
sub = 'The splice leader sequence was detected and removed before alignment')
}
plot_mapping(ce)
library('ggplot2'); theme_set(theme_minimal()); scale_fill_brewer(palette = "RdYlBu")
plot_mapping(ce)
plot_mapping <- function(ce_obj){
CAGEr::plotAnnot(ce_obj, msScope_nfcore_rnaseq, group = 'RNA', facet = 'SLfactor', norm = FALSE) +
ylab('Number of tags processed') +
xlab('Sample name') +
scale_y_continuous(guide = guide_axis(angle = 45)) +
scale_fill_brewer(palette = "RdYlBu") +
ggtitle('QC report of CAGE library alignment',
sub = 'The splice leader sequence was detected and removed before alignment')
}
plot_mapping(ce)
library(wesanderson)
library('wesanderson')
install.packages("wesanderson")
plot_mapping <- function(ce_obj){
CAGEr::plotAnnot(ce_obj, msScope_nfcore_rnaseq, group = 'RNA', facet = 'SLfactor', norm = FALSE) +
ylab('Number of tags processed') +
xlab('Sample name') +
scale_y_continuous(guide = guide_axis(angle = 45)) +
scale_fill_manual(values = wes_palette("GrandBudapest1", n = 3)) +
# scale_fill_brewer(palette = "RdYlBu") +
ggtitle('QC report of CAGE library alignment',
sub = 'The splice leader sequence was detected and removed before alignment')
}
plot_mapping(ce)
library(wesanderson)
plot_mapping(ce)
plot_mapping <- function(ce_obj){
CAGEr::plotAnnot(ce_obj, msScope_nfcore_rnaseq, group = 'RNA', facet = 'SLfactor', norm = FALSE) +
ylab('Number of tags processed') +
xlab('Sample name') +
scale_y_continuous(guide = guide_axis(angle = 45)) +
scale_fill_manual(values = wes_palette("GrandBudapest1", n = 5)) +
# scale_fill_brewer(palette = "RdYlBu") +
ggtitle('QC report of CAGE library alignment',
sub = 'The splice leader sequence was detected and removed before alignment')
}
plot_mapping(ce)
plot_mapping <- function(ce_obj){
CAGEr::plotAnnot(ce_obj, msScope_nfcore_rnaseq, group = 'RNA', facet = 'SLfactor', norm = FALSE) +
ylab('Number of tags processed') +
xlab('Sample name') +
scale_y_continuous(guide = guide_axis(angle = 45)) +
scale_fill_brewer(palette = 'PiYG') +
ggtitle('QC report of CAGE library alignment',
sub = 'The splice leader sequence was detected and removed before alignment')
}
plot_mapping(ce)
plot_mapping <- function(ce_obj){
CAGEr::plotAnnot(ce_obj, msScope_nfcore_rnaseq, group = 'RNA', facet = 'SLfactor', norm = FALSE) +
ylab('Number of tags processed') +
xlab('Sample name') +
scale_y_continuous(guide = guide_axis(angle = 45)) +
scale_fill_viridis(discrete = TRUE) +
ggtitle('QC report of CAGE library alignment',
sub = 'The splice leader sequence was detected and removed before alignment')
}
plot_mapping(ce)
library('viridis')
plot_mapping(ce)
plot_mapping <- function(ce_obj){
plot_mapping <- function(ce_obj){
CAGEr::plotAnnot(ce_obj, msScope_nfcore_rnaseq, group = 'RNA', facet = 'SLfactor', norm = FALSE) +
ylab('Number of tags processed') +
xlab('Sample name') +
scale_y_continuous(guide = guide_axis(angle = 45)) +
scale_fill_viridis(discrete = TRUE) +
theme(plot.subtitle=element_text(size=8, face="italic")) +
ggtitle('QC report of CAGE library alignment',
sub = 'The splice leader sequence was detected and removed before alignment')
}
gff <- rtracklayer::import('/bucket/LuscombeU/live/CharlesPlessy/CAGE/2022-11-09_Barcelona_Oik/AlignWithRNAseqPipelinePE_BAR/Bar2_p4.gm.gtf')
gff$type <- as.character(gff$type)
)))
plot_mapping <- function(ce_obj){
CAGEr::plotAnnot(ce_obj, msScope_nfcore_rnaseq, group = 'RNA', facet = 'SLfactor', norm = FALSE) +
ylab('Number of tags processed') +
xlab('Sample name') +
scale_y_continuous(guide = guide_axis(angle = 45)) +
scale_fill_viridis(discrete = TRUE) +
theme(plot.subtitle=element_text(size=8, face="italic")) +
ggtitle('QC report of CAGE library alignment',
sub = 'The splice leader sequence was detected and removed before alignment')
}
gff <- rtracklayer::import('/bucket/LuscombeU/live/CharlesPlessy/CAGE/2022-11-09_Barcelona_Oik/AlignWithRNAseqPipelinePE_BAR/Bar2_p4.gm.gtf')
gff$type <- as.character(gff$type)
gff <- gff[gff$type %in% c('transcript', 'intron', 'exon')]
plot_mapping(ce)
as.character()
?as.character
ce <- annotateCTSS(ce, gff)
colData(ce)
gff <- rtracklayer::import('/bucket/LuscombeU/live/CharlesPlessy/CAGE/2022-11-09_Barcelona_Oik/AlignWithRNAseqPipelinePE_BAR/Bar2_p4.gm.gtf')
gff$type <- as.character(gff$type)
gff <- gff[gff$type %in% c('transcript', 'intron', 'exon')]
gff$gene_name <- gff$gene_id
ce <- annotateCTSS(ce, gff)
# annotated results
colData(ce)[,c('librarySizes', 'promoter', 'exon', 'intron', 'unknown')]
# proportions
colData(ce)[,c('promoter', 'exon', 'intron', 'unknown')] |> as.matrix() |> prop.table(1)  |> round(2)
plot_annotated <- function(ce_obj) {
plotAnnot(ce, 'counts', group = 'RNA', facet = 'SLfactor', normalise = TRUE) +
ylab('Fraction of tags aligned') +
xlab('Sample name') +
scale_y_continuous(guide = guide_axis(angle = 45)) +
scale_fill_viridis(discrete = TRUE) +
theme(plot.subtitle=element_text(size=8, face="italic")) +
ggtitle('Annotation of the aligned tags',
subtitle = 'The promoters are defined as the 1-kb window centered on the transcript start site.')
}
plot_annotated(ce)
length(sampleLabels(ce))
ce <- setColors(ce, viridis_pal(option = "A")(length(sampleLabels(ce))))
plotReverseCumulatives(ce, fitInRange = c(1e3, 1e5), values = "raw", onePlot = TRUE)#, group = "SLfactor")
ce <- setColors(ce, viridis_pal(option = "D")(length(sampleLabels(ce))))
plotReverseCumulatives(ce, fitInRange = c(1e3, 1e5), values = "raw", onePlot = TRUE)#, group = "SLfactor")
theme(plot.title = element_text(size = 10)#, group = "SLfactor")
)
)
plotReverseCumulatives(ce, fitInRange = c(1e3, 1e5),
values = "raw",
onePlot = TRUE) +
theme(plot.title = element_text(size = 10))#, group = "SLfactor")
?plotReverseCumulatives
library(devtools)
use_r('mqcHisat2')
use_package('CAGEr')
use_package("CAGEr")
load_all()
getwd()
create_package('/home/a/a-klarkowska/CAGErAid')
